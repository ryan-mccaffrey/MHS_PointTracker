package mathhonorsociety;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * Window for managing the specific meetings and events of a selected member.
 * @author Ryan McCaffrey
 */
public class ManagePoints extends javax.swing.JFrame {

    /**
     * Creates new form ManagePoints
     * A new member is created as a copy of the member selected in order to prevent changes from saving instantly.
     */
    public ManagePoints(int index) {
        initComponents();
        memberIndex = index;
        chosenMember = MainOperations.getMemberList().get(index);
        copiedMember = new Student(chosenMember.getFirstName(), chosenMember.getLastName(), chosenMember.getEmail(), chosenMember.getGrade(),
                chosenMember.getTotalPoints(), chosenMember.getNumberOfMeetings(), chosenMember.getNumberOfEvents(), chosenMember.tShirt(),
                chosenMember.getDateList(), chosenMember.getMeetingPointList(), chosenMember.getEventList(), chosenMember.getEventPointList());

        UpdateModel();
        jList1.setModel(model1);

        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jLabel7.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jTextField3.setVisible(false);
        jTextField4.setVisible(false);
        jTextArea1.setVisible(false);
        jButton1.setVisible(false);
        jButton2.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Points");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Meetings/Events:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel3.setText("Meeting Date:");

        jLabel4.setText("Points Earned:");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel5.setText("Event Title:");

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jLabel6.setText("Points Earned:");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jLabel7.setText("Event Description:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea1KeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea1);

        jButton1.setText("Okay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(255, 0, 51));
        jButton2.setText("Save and Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField1)
                                            .addComponent(jTextField2)
                                            .addComponent(jTextField3)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jButton1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    * When event/meeting is highlighted in jList, information of that event/meeting can be modified.
    * @param evt Unused.
    */
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        String selected = jList1.getSelectedValue().toString();
        for (int i = 0; i < copiedMember.getNumberOfMeetings(); i++) {
            if (selected.equals(copiedMember.getDateList().get(i))) {
                meetingIndex = i;
            }
        }
        for (int j = 0; j < copiedMember.getNumberOfEvents(); j++) {
            if (selected.equals(copiedMember.getEventList().get(j).substring(0, copiedMember.getEventList().get(j).indexOf("*")))) {
                eventIndex = j;
            }
        }

        //if selected is a meeting
        if (meetingIndex >= 0) {
            jLabel5.setVisible(false);
            jLabel6.setVisible(false);
            jLabel7.setVisible(false);
            jTextField3.setVisible(false);
            jTextField4.setVisible(false);
            jTextArea1.setVisible(false);

            jTextField1.setText(copiedMember.getDateList().get(meetingIndex));
            jTextField2.setText("" + copiedMember.getMeetingPointList().get(meetingIndex));
            jLabel3.setVisible(true);
            jLabel4.setVisible(true);
            jTextField1.setVisible(true);
            jTextField2.setVisible(true);
            jButton1.setVisible(true);
            
            meetingIndex = -1;
            eventIndex = -1;
          //if selected is an event  
        } else if (eventIndex >= 0) {
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);
            jTextField1.setVisible(false);
            jTextField2.setVisible(false);

            jTextField3.setText(copiedMember.getEventList().get(eventIndex).substring(0, copiedMember.getEventList().get(eventIndex).indexOf("*")));
            jTextField4.setText("" + copiedMember.getEventPointList().get(eventIndex));
            jTextArea1.setText(copiedMember.getEventList().get(eventIndex).substring(copiedMember.getEventList().get(eventIndex).indexOf("*") + 1));
            jLabel5.setVisible(true);
            jLabel6.setVisible(true);
            jLabel7.setVisible(true);
            jTextField3.setVisible(true);
            jTextField4.setVisible(true);
            jTextArea1.setVisible(true);
            jButton1.setVisible(true);
            
            meetingIndex = -1;
            eventIndex = -1;
        }

    }//GEN-LAST:event_jList1MouseClicked

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    /*
    * When "Okay" is clicked, the modified meeting/event is saved in the copied member.
    * @param evt Unused.
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String selected = jList1.getSelectedValue().toString();
        for (int i = 0; i < copiedMember.getNumberOfMeetings(); i++) {
            if (selected.equals(copiedMember.getDateList().get(i))) {
                meetingIndex = i;
            }
        }
        for (int j = 0; j < copiedMember.getNumberOfEvents(); j++) {
            if (selected.equals(copiedMember.getEventList().get(j).substring(0, copiedMember.getEventList().get(j).indexOf("*")))) {
                eventIndex = j;
            }
        }
        
        if (meetingIndex >= 0) {
            if (!jTextField1.getText().equals("")) {

                String month = jTextField1.getText().substring(0, jTextField1.getText().indexOf("/"));
                String dayYear = jTextField1.getText().substring(jTextField1.getText().indexOf("/") + 1);
                String day = dayYear.substring(0, dayYear.indexOf("/"));
                String year = dayYear.substring(dayYear.indexOf("/") + 1);

                if (month.length() == 2 && day.length() == 2 && year.length() == 4) {

                    if (!jTextField2.getText().equals("") && checkIfNumber(jTextField2.getText())) {
                        copiedMember.changeMeetingPoints(meetingIndex, Integer.parseInt(jTextField2.getText()));
                        copiedMember.changeMeetingTitle(meetingIndex, jTextField1.getText());

                        jLabel3.setVisible(false);
                        jLabel4.setVisible(false);
                        jLabel5.setVisible(false);
                        jLabel6.setVisible(false);
                        jLabel7.setVisible(false);
                        jTextField1.setVisible(false);
                        jTextField2.setVisible(false);
                        jTextField3.setVisible(false);
                        jTextField4.setVisible(false);
                        jTextArea1.setVisible(false);
                        jButton1.setVisible(false);

                        UpdateModel();
                        jList1.setModel(model1);
                        jList1.setVisible(true);

                        jTextField1.setText("");
                        jTextField2.setText("");
                        jTextField3.setText("");
                        jTextField4.setText("");
                        jTextArea1.setText("");

                        meetingIndex = -1;
                        eventIndex = -1;
                        jButton2.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter a valid point value.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please put the date in mm/dd/yyyy format.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a valid date");
            }
        } else if (eventIndex >= 0) {
            if (!jTextField3.getText().equals("")) {
                if (!(jTextArea1.getText().indexOf("*") >= 0)) {
                    if (!jTextField4.getText().equals("") && checkIfNumber(jTextField4.getText())) {
                        copiedMember.changeEventPoints(eventIndex, Integer.parseInt(jTextField4.getText()));
                        copiedMember.changeEventTitle(eventIndex, jTextField3.getText() + "*" + jTextArea1.getText());

                        jLabel3.setVisible(false);
                        jLabel4.setVisible(false);
                        jLabel5.setVisible(false);
                        jLabel6.setVisible(false);
                        jLabel7.setVisible(false);
                        jTextField1.setVisible(false);
                        jTextField2.setVisible(false);
                        jTextField3.setVisible(false);
                        jTextField4.setVisible(false);
                        jTextArea1.setVisible(false);
                        jButton1.setVisible(false);

                        UpdateModel();
                        jList1.setModel(model1);

                        jTextField1.setText("");
                        jTextField2.setText("");
                        jTextField3.setText("");
                        jTextField4.setText("");
                        jTextArea1.setText("");

                        meetingIndex = -1;
                        eventIndex = -1;
                        jButton2.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter a valid point value.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please do not use the \"*\" symbol in event description.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter an event title.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unknown error occurred.");
        }

        //JOptionPane.showMessageDialog(null, "Event.");

    }//GEN-LAST:event_jButton1ActionPerformed

    /*
    * When a key is typed, the jList empties to prevent user from switching meetings/events without finishing.
    * @param evt Unused.
    */
    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        //jList1.setModel(blankModel);
        jList1.setVisible(false);
        jButton2.setVisible(false);
    }//GEN-LAST:event_jTextField1KeyTyped

    /*
    * When a key is typed, the jList empties to prevent user from switching meetings/events without finishing.
    * @param evt Unused.
    */
    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        jList1.setVisible(false);
        jButton2.setVisible(false);
    }//GEN-LAST:event_jTextField2KeyTyped

    /*
    * When a key is typed, the jList empties to prevent user from switching meetings/events without finishing.
    * @param evt Unused.
    */
    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        jList1.setVisible(false);
        jButton2.setVisible(false);
    }//GEN-LAST:event_jTextField3KeyTyped

    /*
    * When a key is typed, the jList empties to prevent user from switching meetings/events without finishing.
    * @param evt Unused.
    */
    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        jList1.setVisible(false);
        jButton2.setVisible(false);
    }//GEN-LAST:event_jTextField4KeyTyped

    /*
    * When a key is typed, the jList empties to prevent user from switching meetings/events without finishing.
    * @param evt Unused.
    */
    private void jTextArea1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyTyped
        jList1.setVisible(false);
        jButton2.setVisible(false);
    }//GEN-LAST:event_jTextArea1KeyTyped

    /*
    * When "Save and Close" is clicked, the original member is set as the copied member.
    * File is saved
    * @param evt Unused.
    */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MainOperations.getMemberList().set(memberIndex, copiedMember);
        MainOperations.getMemberList().get(memberIndex).updateStudent();

        try {
            FileHandler.ToFile(MainOperations.getMemberList());
        } catch (IOException ex) {
            Logger.getLogger(ManagePoints.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Changes successfully saved.");

        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /*
    * Checks that number does not contain letter parts
    * @param text This is the number entered.
    * @return boolean This is true for when the number is valid.
    */
    private boolean checkIfNumber(String text) {
        boolean isNumber = true;
        final String ALPHABET = "abcdefghijklmnopqrstuvwxyz";
        for (int i = 0; i < text.length(); i++) {
            for (int j = 0; j < ALPHABET.length(); j++) {
                if (text.substring(i, i + 1).equalsIgnoreCase(ALPHABET.substring(j, j + 1))) {
                    isNumber = false;
                }
            }
        }

        return isNumber;
    }

    /*
    * Updates the appearance of the model for the jList to use.
    */
    private void UpdateModel() {
        model1.clear();
        for (int i = 0; i < copiedMember.getNumberOfMeetings(); i++) {
            model1.addElement(copiedMember.getDateList().get(i));
        }
        for (int j = 0; j < copiedMember.getNumberOfEvents(); j++) {
            String eventStuff = copiedMember.getEventList().get(j).substring(0, copiedMember.getEventList().get(j).indexOf("*"));
            model1.addElement(eventStuff);
        }
    }
    /**
     * @param args the command line arguments
     */

    private int meetingIndex = -1;
    private int eventIndex = -1;
    private Student copiedMember;
    private Student chosenMember;
    private int memberIndex;
    private DefaultListModel model1 = new DefaultListModel();
    private DefaultListModel blankModel = new DefaultListModel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
