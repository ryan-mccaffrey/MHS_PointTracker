package mathhonorsociety;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.mail.internet.AddressException;
import javax.swing.*;

/**
 * Main window for all user operations
 * @author Ryan McCaffrey
 */
public class MenuWindow extends javax.swing.JFrame {

    /**
     * Creates new form MenuWindow
     */
    public MenuWindow() {
        initComponents();
        emailError.setVisible(false);
        emptyBoxes.setVisible(false);
        updateInformation.setVisible(false);
        updatePoints.setVisible(false);
        removeMember.setVisible(false);
        dateExample.setVisible(false);
        dateLabel.setVisible(false);
        typedDate.setVisible(false);
        eventLabel.setVisible(false);
        eventTitle.setVisible(false);
        jLabel6.setVisible(false);
        jTextArea1.setVisible(false);
        newMeeting.setVisible(false);
        newEvent.setVisible(false);
        jTextArea1.setVisible(false);
        jLabel7.setVisible(false);
        jTextField3.setVisible(false);

        UpdateStudentJList();

        jTextField1.setText(MainOperations.getPointsPerMeeting() + "");
        jTextField2.setText(MainOperations.getPointsPerShirt() + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tShirtOrder = new javax.swing.ButtonGroup();
        GradeLevel = new javax.swing.ButtonGroup();
        meetingType = new javax.swing.ButtonGroup();
        jButton7 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        enterFirstName = new javax.swing.JLabel();
        enterLastName = new javax.swing.JLabel();
        enterEmail1 = new javax.swing.JLabel();
        enterEmail2 = new javax.swing.JLabel();
        enterTshirt = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        email1 = new javax.swing.JTextField();
        email2 = new javax.swing.JTextField();
        tshirtTrue = new javax.swing.JRadioButton();
        tshirtFalse = new javax.swing.JRadioButton();
        enterGrade = new javax.swing.JLabel();
        grade11 = new javax.swing.JRadioButton();
        grade12 = new javax.swing.JRadioButton();
        addNewMember = new javax.swing.JButton();
        emailError = new javax.swing.JLabel();
        emptyBoxes = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sendEmails = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        updateInformation = new javax.swing.JButton();
        updatePoints = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        nameList = new javax.swing.JList();
        removeMember = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        meeting = new javax.swing.JRadioButton();
        specialEvent = new javax.swing.JRadioButton();
        dateLabel = new javax.swing.JLabel();
        typedDate = new javax.swing.JTextField();
        dateExample = new javax.swing.JLabel();
        eventTitle = new javax.swing.JTextField();
        eventLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        newMeeting = new javax.swing.JButton();
        newEvent = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        jButton7.setText("jButton7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enterFirstName.setText("New member's first name:");

        enterLastName.setText("New member's last name:");

        enterEmail1.setText("Email address:");

        enterEmail2.setText("Verify email address:");

        enterTshirt.setText("Did the member order a shirt?");

        tShirtOrder.add(tshirtTrue);
        tshirtTrue.setText("Yes");

        tShirtOrder.add(tshirtFalse);
        tshirtFalse.setText("No");
        tshirtFalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tshirtFalseActionPerformed(evt);
            }
        });

        enterGrade.setText("Grade:");

        GradeLevel.add(grade11);
        grade11.setText("11");

        GradeLevel.add(grade12);
        grade12.setText("12");

        addNewMember.setText("Add New Member");
        addNewMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewMemberActionPerformed(evt);
            }
        });

        emailError.setForeground(new java.awt.Color(255, 102, 102));
        emailError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailError.setText("*Please make sure that the emails match.*");
        emailError.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        emptyBoxes.setForeground(new java.awt.Color(255, 102, 102));
        emptyBoxes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emptyBoxes.setText("*Please fill out all prompts.*");
        emptyBoxes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterLastName)
                            .addComponent(enterEmail2)
                            .addComponent(enterFirstName)
                            .addComponent(enterEmail1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lastName)
                            .addComponent(firstName)
                            .addComponent(email1)
                            .addComponent(email2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(emailError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(emptyBoxes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(enterGrade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(grade12)
                            .addComponent(grade11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addNewMember, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(enterTshirt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tshirtFalse)
                                    .addComponent(tshirtTrue))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(emptyBoxes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterFirstName)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterLastName)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterEmail1)
                    .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterEmail2)
                    .addComponent(email2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(emailError)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grade12)
                            .addComponent(tshirtFalse)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grade11)
                        .addComponent(enterTshirt)
                        .addComponent(tshirtTrue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addNewMember)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Member", jPanel1);

        jLabel8.setText("How many points should each member have?");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("By clicking \"Send Emails\", each member who does not have the amount");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("of points required will receive a warning email.");

        sendEmails.setText("Send Emails");
        sendEmails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(8, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(sendEmails)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(sendEmails)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Send Warning Emails", jPanel6);

        jLabel1.setText("Select member:");

        updateInformation.setText("Update Personal Information");
        updateInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInformationActionPerformed(evt);
            }
        });

        updatePoints.setText("Manage Points");
        updatePoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePointsActionPerformed(evt);
            }
        });

        nameList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        nameList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(nameList);

        removeMember.setForeground(new java.awt.Color(255, 51, 51));
        removeMember.setText("Remove Member");
        removeMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMemberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updatePoints, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeMember, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addComponent(updateInformation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatePoints)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                        .addComponent(removeMember))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manage Members", jPanel2);

        jLabel2.setText("Event Type:");

        meetingType.add(meeting);
        meeting.setText("Meeting");
        meeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetingActionPerformed(evt);
            }
        });

        meetingType.add(specialEvent);
        specialEvent.setText("Special Event");
        specialEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialEventActionPerformed(evt);
            }
        });

        dateLabel.setText("Date:");

        typedDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        typedDate.setText("mm/dd/yyyy");

        dateExample.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        dateExample.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateExample.setText("format mm/dd/yyyy");

        eventLabel.setText("Title of Event:");

        jTextArea1.setColumns(10);
        jTextArea1.setRows(5);
        jTextArea1.setText("(optional)");
        jTextArea1.setToolTipText("");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        jTextArea1.setSize(new java.awt.Dimension(80, 80));
        jScrollPane2.setViewportView(jTextArea1);

        jLabel6.setText("Description:");

        newMeeting.setText("Give Meeting Points");
        newMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMeetingActionPerformed(evt);
            }
        });

        newEvent.setText("Give Event Points");
        newEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEventActionPerformed(evt);
            }
        });

        jLabel7.setText("Points Member Earns:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(dateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(meeting)
                                .addGap(18, 18, 18)
                                .addComponent(newMeeting))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(specialEvent)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(dateExample, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(eventLabel)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(eventTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(meeting)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newMeeting)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(specialEvent)
                    .addComponent(newEvent))
                .addGap(18, 18, 18)
                .addComponent(dateExample)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(typedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventLabel)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Event", jPanel3);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Point Quantities:");

        jTextField1.setText("jTextField1");

        jLabel4.setText("point(s) for attending a meeting");

        jTextField2.setText("jTextField2");

        jLabel5.setText("point(s) for wearing a T-Shirt to the meeting");

        jButton6.setText("Save Changes");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jButton6)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addComponent(jButton6))
        );

        jTabbedPane1.addTab("Settings", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    * The model for the list of existing members is updated. jList displays updated model.
    */
    public void UpdateStudentJList() {
        model1.clear();
        namesOfPeople = new String[MainOperations.getNumberOfMembers()];
        for (int j = 0; j < MainOperations.getNumberOfMembers(); j++) {
            model1.addElement(MainOperations.getMemberList().get(j).getLastName() + ", " + MainOperations.getMemberList().get(j).getFirstName());
            namesOfPeople[j] = MainOperations.getMemberList().get(j).getLastName() + ", " + MainOperations.getMemberList().get(j).getFirstName();
        }
        nameList.setModel(model1);
    }
    
    private void tshirtFalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tshirtFalseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tshirtFalseActionPerformed

    /*
    * Method that occurs when "Add Member" is clicked.
    * @param evt Unused.
    */
    private void addNewMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewMemberActionPerformed
        if (firstName.getText().equals("") || lastName.getText().equals("") || email1.getText().equals("") || email2.getText().equals("") || !(grade11.isSelected() || grade12.isSelected()) || !(tshirtTrue.isSelected() || tshirtFalse.isSelected())) {
            emptyBoxes.setVisible(true);
        } else if (!(email1.getText().equals(email2.getText()))) {
            emailError.setVisible(true);
        } else {
            //Adds member with information
            int grade = 12;
            if (grade11.isSelected()) {
                grade = 11;
            }

            boolean shirt = false;
            if (tshirtTrue.isSelected()) {
                shirt = true;
            }
            MainOperations.addMember(firstName.getText(), lastName.getText(), email1.getText(), grade, shirt);

            //Updates list for "Manage Members" tab
            UpdateStudentJList();

            try {
                FileHandler.ToFile(MainOperations.getMemberList());
            } catch (IOException ex) {
                Logger.getLogger(MenuWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            firstName.setText(null);
            lastName.setText(null);
            email1.setText(null);
            email2.setText(null);
            tShirtOrder.clearSelection();
            GradeLevel.clearSelection();
            emptyBoxes.setVisible(false);
            emailError.setVisible(false);

            JOptionPane.showMessageDialog(null, "New member successfully added.");

        }
    }//GEN-LAST:event_addNewMemberActionPerformed

    /*
    * When name in the jList is highlighted, options to edit the member appear.
    * @param evt Unused.
    */
    private void nameListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameListMouseClicked
        updateInformation.setVisible(true);
        updatePoints.setVisible(true);
        removeMember.setVisible(true);
    }//GEN-LAST:event_nameListMouseClicked

    /*
    * Brings up removal warning window when member clicks "Remove Member".
    * @param evt Unused.
    */
    private void removeMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMemberActionPerformed
        memberRemoveWarning = new RemoveMember1();
        memberRemoveWarning.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        String name = MainClass.getMenuWindow1().getSelectedName();
        String lastName1 = name.substring(0, name.indexOf(","));
        String firstName1 = name.substring(name.indexOf(",") + 2);
        memberRemoveWarning.setTitle("Removal of " + firstName1 + " " + lastName1);
        memberRemoveWarning.setVisible(true);
    }//GEN-LAST:event_removeMemberActionPerformed

    /*
    * When Special Event radio button is selected, text boxes appear for event description.
    * @param evt Unused.
    */
    private void specialEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialEventActionPerformed
        if (specialEvent.isSelected()) {
            dateExample.setVisible(false);
            dateLabel.setVisible(false);
            typedDate.setVisible(false);
            eventLabel.setVisible(true);
            eventTitle.setVisible(true);
            jLabel6.setVisible(true);
            jTextArea1.setVisible(true);
            newEvent.setVisible(true);
            newMeeting.setVisible(false);
            jLabel7.setVisible(true);
            jTextField3.setVisible(true);
        }
    }//GEN-LAST:event_specialEventActionPerformed

    /*
    * When Meeting radio button is selected, text boxes appear for meeting date.
    * @param evt Unused.
    */
    private void meetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetingActionPerformed
        if (meeting.isSelected()) {
            dateExample.setVisible(true);
            dateLabel.setVisible(true);
            typedDate.setVisible(true);
            eventLabel.setVisible(false);
            eventTitle.setVisible(false);
            jLabel6.setVisible(false);
            jTextArea1.setVisible(false);
            newEvent.setVisible(false);
            newMeeting.setVisible(true);
            jLabel7.setVisible(false);
            jTextField3.setVisible(false);
        }
    }//GEN-LAST:event_meetingActionPerformed

    /*
    * Creates new SwingEmbedding for user to add points to members that attended meeting.
    * @param evt Unused.
    */
    private void newMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMeetingActionPerformed
        String enteredDate = typedDate.getText();
        String month = "";
        String dayYear = "";
        String day = "";
        String year = "";

        if (!(enteredDate.equalsIgnoreCase(""))) {
            month = enteredDate.substring(0, enteredDate.indexOf("/"));
            dayYear = enteredDate.substring(enteredDate.indexOf("/") + 1);
            day = dayYear.substring(0, dayYear.indexOf("/"));
            year = dayYear.substring(dayYear.indexOf("/") + 1);
        }

        if (!(month.length() == 2 && day.length() == 2 && year.length() == 4)) {
            JOptionPane.showMessageDialog(null, "Please put the date in mm/dd/yyyy format.");
        } else if ((month.equalsIgnoreCase("mm") && day.equalsIgnoreCase("dd") && year.equalsIgnoreCase("yyyy")) || enteredDate.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a correct date.");
        } else {
            embedding = new SwingEmbedding();
            embedding.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            embedding.setLocation(200, 200);
            embeddingNotice = new AddMeetingConfirm();
            embeddingNotice.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            embeddingNotice.setLocation(600, 200);
            embeddingNotice.setVisible(true);
            embedding.setVisible(true);

            /*     SwingUtilities.invokeLater(new Runnable() {

             @Override
             public void run() {
             new TestTable().initUI();
             }
             }); */
            for (int i = 0; i < MainOperations.getNumberOfMembers(); i++) {
                MainOperations.getMemberList().get(i).addMeeting(typedDate.getText(), 0);
            }
        }

    }//GEN-LAST:event_newMeetingActionPerformed

    /*
    * When user wants to update a member's personal information.
    * @param evt Unused.
    */
    private void updateInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInformationActionPerformed
        updateInfo = new UpdatePersonalInformation();
        updateInfo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        updateInfo.setVisible(true);

    }//GEN-LAST:event_updateInformationActionPerformed

    /*
    * Saves new settings for when user changes number of points per meeting/per shirt.
    * @param evt Unused.
    */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        MainOperations.changePointsPerMeeting(Integer.parseInt(jTextField1.getText()));
        MainOperations.changePointsPerShirt(Integer.parseInt(jTextField2.getText()));

        try {
            FileHandler.ToFile(MainOperations.getMemberList());
        } catch (IOException ex) {
            Logger.getLogger(MenuWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Changes have been saved.");
    }//GEN-LAST:event_jButton6ActionPerformed

    /*
    * Creates new SwingEmbedding2 for user to add points to members that attended event.
    * @param evt Unused.
    */
    private void newEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEventActionPerformed
        String enteredTitle = eventTitle.getText();
        String enteredDescription = jTextArea1.getText();

        final String alphabet = "abcdefghijklmnopqrstuvwxyz";
        String enteredPointValue = jTextField3.getText();
        boolean eventValid = true;
        for (int i = 0; i < enteredPointValue.length(); i++) {
            if (i < enteredPointValue.length() - 1) {
                if (alphabet.indexOf(enteredPointValue.substring(i, i + 1)) >= 0) {
                    eventValid = false;
                }
            } else {
                if (alphabet.indexOf(enteredPointValue.substring(i)) >= 0) {
                    eventValid = false;
                }
            }
        }

        if (enteredDescription.indexOf("*") >= 0) {
            JOptionPane.showMessageDialog(null, "Please do not use the \"*\" symbol in event description.");
        } else if (enteredTitle.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Please enter an event title.");
        } else if (jTextField3.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Please enter an amount of points for each member to earn for this event.");
        } else {
            if (eventValid == true) {
                String eventTitleDescription = "";
                if ((enteredDescription.equalsIgnoreCase("")) || enteredDescription.equalsIgnoreCase("(optional)")) {
                    eventTitleDescription = enteredTitle + "*";
                } else {
                    eventTitleDescription = enteredTitle + "*" + enteredDescription;
                }
                pointsForEvent = Integer.parseInt(jTextField3.getText());
                embeddingEvent = new SwingEmbedding2();
                embeddingEvent.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                embeddingEvent.setLocation(200, 200);
                embeddingEvent.setVisible(true);
                AddEventConfirm embeddingEventNotice = new AddEventConfirm();
                embeddingEventNotice.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                embeddingEventNotice.setLocation(600, 200);
                embeddingEventNotice.setVisible(true);
                jTextField3.setText("");
                eventTitle.setText("");
                jTextArea1.setText("(optional)");
                for (int i = 0; i < MainOperations.getNumberOfMembers(); i++) {
                    MainOperations.getMemberList().get(i).addEvent(eventTitleDescription, 0);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter valid point amount.");
            }
        }
    }//GEN-LAST:event_newEventActionPerformed

    /*
    * Begins process for sending emails to members who do not have enough points.
    * @param evt Unused.
    */
    private void sendEmailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmailsActionPerformed
        int numberOfEmails = 0;
        final String alphabet = "abcdefghijklmnopqrstuvwxyz";
        boolean valid = true;

        if (jTextField4.getText().equalsIgnoreCase("")) {
            valid = false;
        }

        for (int j = 0; j < jTextField4.getText().length(); j++) {
            if (j < jTextField4.getText().length() - 1) {
                if (alphabet.indexOf(jTextField4.getText().substring(j, j + 1)) >= 0) {
                    valid = false;
                }
            } else {
                if (alphabet.indexOf(jTextField4.getText().substring(j)) >= 0) {
                    valid = false;
                }
            }
        }

        if (valid == false) {
            JOptionPane.showMessageDialog(null, "Please enter a valid required point amount.");
        } else {
            for (int i = 0; i < MainOperations.getNumberOfMembers(); i++) {
                if (MainOperations.getMemberList().get(i).getTotalPoints() < Integer.parseInt(jTextField4.getText())) {
                    try {
                        JavaEmail.send(Integer.parseInt(jTextField4.getText()), MainOperations.getMemberList().get(i).getEmail(), MainOperations.getMemberList().get(i).getFirstName(), MainOperations.getMemberList().get(i).getLastName(), MainOperations.getMemberList().get(i).getTotalPoints());
                    } catch (MessagingException ex) {
                        Logger.getLogger(MenuWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    numberOfEmails++;
                }
            }

            jTextField4.setText("");
            JOptionPane.showMessageDialog(null, numberOfEmails + " emails successfully sent.");

        }

    }//GEN-LAST:event_sendEmailsActionPerformed

    /*
    * Opens a new window that allows user to edit meetings/events that member attended.
    * @param evt Unused.
    */
    private void updatePointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePointsActionPerformed
        String last = getSelectedName().substring(0, getSelectedName().indexOf(","));
        String first = getSelectedName().substring(getSelectedName().indexOf(",") + 2);
        int index = MainOperations.findIndexOfMember(first, last);
        managePoints1 = new ManagePoints(index);

        managePoints1.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        managePoints1.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int confirm = JOptionPane.showOptionDialog(managePoints1, "Are you sure you don't want to save your changes?", "Cancel managing points", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if (confirm == JOptionPane.OK_OPTION) {
                    managePoints1.setVisible(false);
                    managePoints1.dispose();
                }
            }
        });

        managePoints1.setVisible(true);
    }//GEN-LAST:event_updatePointsActionPerformed

    /*
    * Hides the three buttons below for when no member is selected in jList.
    */
    public void hideMemberButtons()
    {
        updateInformation.setVisible(false);
        updatePoints.setVisible(false);
        removeMember.setVisible(false);
    }
    
    /*
    * Displays new amounts set for points per meeting/per shirt.
    */
    public void updateSettingsTab() {
        jTextField1.setText(MainOperations.getPointsPerMeeting() + "");
        jTextField2.setText(MainOperations.getPointsPerShirt() + "");
    }

    /*
    * Gets the name highlighted in jList.
    * @return String This is the name of the highlighted member.
    */
    public String getSelectedName() {
        return nameList.getSelectedValue().toString();
    }

    /*
    * Returns updateInformation button.
    * @return JButton This is the button.
    */
    public JButton getJButton2() {
        return updateInformation;
    }

    /*
    * Returns updatePoints button.
    * @return JButton This is the button.
    */
    public JButton getJButton3() {
        return updatePoints;
    }

    /*
    * Returns removeMember button.
    * @return JButton This is the button.
    */
    public JButton getJButton4() {
        return removeMember;
    }

    /*
    * Returns String array of member's names.
    * @return String[] This is the array of all members.
    */
    public String[] getNamesOfPeople() {
        UpdateStudentJList();
        return namesOfPeople;
    }

    /*
    * Returns embedding window (adds meeting points).
    * @return SwingEmbedding This is the window.
    */
    public SwingEmbedding getEmbedding() {
        return embedding;
    }

    /*
    * Returns embeddingEvent window (adds event points).
    * @return SwingEmbedding2 This is the window.
    */
    public SwingEmbedding2 getEmbeddingEvent() {
        return embeddingEvent;
    }

    /*
    * Returns updateInfo window (for updating member's personal info).
    * @return UpdatePersonalInformation This is the window.
    */
    public UpdatePersonalInformation getUpdateInfo() {
        return updateInfo;
    }

    /*
    * Returns number of points earned for the given event.
    * @return int This is the number of points.
    */
    public int getPointsForEvent() {
        return pointsForEvent;
    }

    /*
    * Returns embeddingNotice window (window next to AddMeetingPoints).
    * @return AddMeetingConfirm This is the window.
    */
    public AddMeetingConfirm getEmbeddingNotice() {
        return embeddingNotice;
    }

  //  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
     try {
     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
     if ("Nimbus".equals(info.getName())) {
     javax.FirstNameIManager.setLookAndFeel(info.getClassName());
     break;
     }
     }
     } catch (ClassNotFoundException ex) {
     java.util.logging.Logger.getLogger(MenuWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (InstantiationException ex) {
     java.util.logging.Logger.getLogger(MenuWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (IllegalAccessException ex) {
     java.util.logging.Logger.getLogger(MenuWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
     java.util.logging.Logger.getLogger(MenuWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }
     //</editor-fold>

     /* Create and display the form 
     java.awt.EventQueue.invokeLater(new Runnable() {
     public void run() {
     new MenuWindow().setVisible(true);
     }
    
   
     });
     }
     */
    private ManagePoints managePoints1;
    private int pointsForEvent;
    private UpdatePersonalInformation updateInfo;
    private RemoveMember1 memberRemoveWarning;
    private AddMeetingConfirm embeddingNotice;
    private SwingEmbedding embedding;
    private SwingEmbedding2 embeddingEvent;
    private DefaultListModel model1 = new DefaultListModel();
    private String[] namesOfPeople = new String[MainOperations.getNumberOfMembers()];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GradeLevel;
    private javax.swing.JButton addNewMember;
    private javax.swing.JLabel dateExample;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField email1;
    private javax.swing.JTextField email2;
    private javax.swing.JLabel emailError;
    private javax.swing.JLabel emptyBoxes;
    private javax.swing.JLabel enterEmail1;
    private javax.swing.JLabel enterEmail2;
    private javax.swing.JLabel enterFirstName;
    private javax.swing.JLabel enterGrade;
    private javax.swing.JLabel enterLastName;
    private javax.swing.JLabel enterTshirt;
    private javax.swing.JLabel eventLabel;
    private javax.swing.JTextField eventTitle;
    private javax.swing.JTextField firstName;
    private javax.swing.JRadioButton grade11;
    private javax.swing.JRadioButton grade12;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField lastName;
    private javax.swing.JRadioButton meeting;
    private javax.swing.ButtonGroup meetingType;
    private javax.swing.JList nameList;
    private javax.swing.JButton newEvent;
    private javax.swing.JButton newMeeting;
    private javax.swing.JButton removeMember;
    private javax.swing.JButton sendEmails;
    private javax.swing.JRadioButton specialEvent;
    private javax.swing.ButtonGroup tShirtOrder;
    private javax.swing.JRadioButton tshirtFalse;
    private javax.swing.JRadioButton tshirtTrue;
    private javax.swing.JTextField typedDate;
    private javax.swing.JButton updateInformation;
    private javax.swing.JButton updatePoints;
    // End of variables declaration//GEN-END:variables

}
